"use strict";(self.webpackChunkport_app=self.webpackChunkport_app||[]).push([[1608],{1284:(t,a,e)=>{e.d(a,{TextDrawer:()=>s,I:()=>c});var n=e(4864);const o=2,i=.5;function l(t,a,e,n,l,c){const s={x:-(a.length*e*i),y:e*i},r=e*o;c?t.fillText(a,s.x,s.y+r*l):t.strokeText(a,s.x,s.y+r*l)}const c=["text","character","char","multiline-text"];class s{draw(t){!function(t){var a,e,i;const{context:c,particle:s,radius:r,opacity:p}=t,d=s.shapeData;if(!d)return;const h=d.value;if(void 0===h)return;void 0===s.text&&(s.text=(0,n.pd)(h,s.randomIndexData));const u=s.text,f=null!==(a=d.style)&&void 0!==a?a:"",x=null!==(e=d.weight)&&void 0!==e?e:"400",v=Math.round(r)*o,w=null!==(i=d.font)&&void 0!==i?i:"Verdana",y=s.shapeFill,g=null===u||void 0===u?void 0:u.split("\n");if(g){c.font="".concat(f," ").concat(x," ").concat(v,'px "').concat(w,'"'),c.globalAlpha=p;for(let t=0;t<g.length;t++)l(c,g[t],r,0,t,y);c.globalAlpha=1}}(t)}async init(t){const a=t.actualOptions;if(c.find((t=>(0,n.Sc)(t,a.particles.shape.type)))){const t=c.map((t=>a.particles.shape.options[t])).find((t=>!!t)),e=[];(0,n.yW)(t,(t=>{e.push((0,n.or)(t.font,t.weight))})),await Promise.all(e)}}particleInit(t,a){if(!a.shape||!c.includes(a.shape))return;const e=a.shapeData;if(void 0===e)return;const o=e.value;void 0!==o&&(a.text=(0,n.pd)(o,a.randomIndexData))}}},1608:(t,a,e)=>{e.d(a,{loadTextShape:()=>o});var n=e(1284);async function o(t){let a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{TextDrawer:o}=await Promise.resolve().then(e.bind(e,1284));await t.addShape(n.I,new o,a)}}}]);
//# sourceMappingURL=1608.3a34ffa8.chunk.js.map